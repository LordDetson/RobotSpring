<?xml version="1.0" encoding="UTF-8"?>
<beans default-lazy-init="true"
       xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd"
       xmlns:c="http://www.springframework.org/schema/c" xmlns:util="http://www.springframework.org/schema/util"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop">

    <context:annotation-config/>
    <context:component-scan base-package="by.babanin.example1"/>
    <aop:aspectj-autoproxy/>

    <!--<aop:config>
        <aop:aspect id="logActionRobot" ref="loggerAspect">
            <aop:pointcut id="robotAction" expression="execution(* by.babanin.example1.interfaces.Robot.action())"/>
            <aop:before method="logBefore" pointcut-ref="robotAction"/>
            <aop:after method="logAfter" pointcut-ref="robotAction"/>
            <aop:after-throwing method="logAfterThrow" throwing="ex" pointcut-ref="robotAction"/>
            <aop:around method="watchTime" pointcut-ref="robotAction"/>
            <aop:around method="watchTime" pointcut="execution(* by.babanin.example1.interfaces.RobotFactory.*(..))"/>
            <aop:around method="watchTime" pointcut="execution(* by.babanin.example1.interfaces.RobotPool.*(..))"/>
        </aop:aspect>
    </aop:config>-->

    <!--<import resource="model.xml"/>

    <bean class="by.babanin.example1.ActionReplacer" name="actionReplacer"/>

    <bean class="by.babanin.example1.impl.robot.ModelT1000" id="t1000" scope="prototype" autowire="byType">
        <property name="name" value="t1000"/>
        <property name="color" value="black"/>
        <property name="year" value="2006"/>
        <property name="soundEnabled" value="true"/>
        <replaced-method name="action" replacer="actionReplacer"/>
    </bean>

    <bean class="by.babanin.example1.impl.robot.ModelT1000" id="modelT1000" parent="t1000" autowire="byType">
        <property name="name" value="modelT1000"/>
        <property name="hand" ref="sonyHand"/>
        <property name="soundEnabled" value="false"/>
        <property name="year" value="2017"/>
    </bean>

    <bean class="by.babanin.example1.impl.robot.ModelT1000Factory" id="modelT1000Factory">
        <lookup-method name="create" bean="t1000"/>
    </bean>

    <util:map id="robots">
        <entry key="#{t1000.year}" value-ref="t1000"/>
        <entry key="#{modelT1000.year}" value-ref="modelT1000"/>
    </util:map>
    <bean class="by.babanin.example1.impl.robot.ModelT1000Pool" id="modelT1000Pool" autowire="constructor"/>

    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:constant.properties</value>
            </list>
        </property>
    </bean>

    <bean class="org.slf4j.LoggerFactory" id="loggerFactory"/>

    <bean class="by.babanin.example1.MyBeanPostProcessor" id="beanPostProcessor"
          c:logger="#{loggerFactory.getLogger('beanPostProcessor')}"/>-->
</beans>